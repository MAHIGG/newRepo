package day3_secondHalf;

import java.util.Comparator;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.TreeMap;

public class KeyBasedSortingOfHashMap {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Map<Emp, Integer> map= new TreeMap<>(new ComparatorSortByValue());
		map.put(new Emp(4,"a"), 4);
		map.put(new Emp(2,"b"), 2);
		map.put(new Emp(1,"c"), 1);
		map.put(new Emp(5,"d"), 5);
		map.put(new Emp(3,"e"), 3);
		
		Set<Map.Entry<Emp,Integer>> entry=map.entrySet();
		Iterator<Map.Entry<Emp,Integer>> itr =entry.iterator();
		while(itr.hasNext()) {
			Entry<Emp, Integer> e=itr.next();
			System.out.println(e.getKey()+":::"+e.getValue());
		}
		
	}

}

class ComparatorSortByValue implements Comparator<Emp>{

	@Override
	public int compare(Emp o1, Emp o2) {
		
		return o1.id-o2.id;
	}
	
}

class Emp{
	int id;
	String name;
	
	
	@Override
	public String toString() {
		return "Emp [id=" + id + ", name=" + name + "]";
	}
	public Emp(int id, String name) {
		this.id = id;
		this.name = name;
	}
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + id;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Emp other = (Emp) obj;
		if (id != other.id)
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}
}